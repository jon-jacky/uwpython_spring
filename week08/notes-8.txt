% talking points for week 8 lecture on PyPI, distutils, ...

Lots of tools, rather bewildering: distutils, setuptools, easy_install, pip, ...
 
This class: concentrate on distutils, with setup.py and PyPI
Part of the standard library
Demonstrates most of the basic techniques and problems
Then: briefly discuss its limitations, quickly survey the other tools

What problem do these tools solve?
Why not just post/download the .py files --- requires no special tools

distutils adds ---
Automation/convenience/configurability for installation 
Also (maybe MORE important) helps *find* and *publicize* packages
Co-evolved with PyPI, Python Package Index (aka CheeseShop)
Defines, encourages standard metadata for describing Python packages
Supports, encourages standard package contents, directory organization

Review of built-in Python packaging and installation - no tools needed

module - any .py file
package - directory containing modules, including at least  __init__.py 

You can make any dir of .py files into a package by adding an __init__.py
(which can be empty, often contains just a docstring).

importing a package, importing modules from a package

PYTHONPATH and site-packages


distutils and setup.py

Same tool handles installation and distribution 
Command summary (? where did I see this)

Installation:
site-packages and bin
Configuration

Distribution:
Directory organization
Metadata
Build commands


Limitations of distutils:
Multiple Python installations
Dependencies

Other tools:

OS installers: apt, synaptic (Debian/Ubuntu), rpm (RedHat), macports (Mac),
Windows ...

Local applications: clear division between distribution and installation
Web applications: these are merged into a single *deployment* step
Fabric tool


References

PyPI - the Python Package Index
http://pypi.python.org/pypi

CheeseShop Tutorial
http://wiki.python.org/moin/CheeseShopTutorial

The Hitchhiker’s Guide to Packaging: Quick Start
http://guide.python-distribute.org/quickstart.html

Installing Python Modules
http://docs.python.org/install/index.html

Distributing Python Modules
http://docs.python.org/distutils/index.html

The Hitchhiker’s Guide to Packaging: Welcome (toc) and Introduction
http://guide.python-distribute.org/
http://guide.python-distribute.org/introduction.html

Tools of the Modern Python Hacker: Virtualenv, Fabric and Pip
http://www.clemesha.org/blog/modern-python-hacker-tools-virtualenv-fabric-pip

A history of Python packaging
http://faassen.n--tree.net/blog/view/weblog/2009/11/09/0

"I want a pony": a developer's view of the Python packaging ecosystem
http://groups.google.com/group/django-developers/msg/5407cdb400157259
